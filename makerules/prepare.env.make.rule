prepare:
	if [ ! -z "$(strip $(PROJECT_DEPENDENCY))" ]; then \
	  dependencies=$$(echo "$(strip $(PROJECT_DEPENDENCY))"); \
	  result=$$(echo "passed"); \
	  for cmd in $$dependencies; do \
	    found=$$(which $$cmd); \
	    if [ "$$found" = "" ]; then \
	      echo -e $(ERROR_COLOR)"Check project dependency failed : \"$$cmd\""$(RESTORE_COLOR); \
	      result=$$(echo $$result" $$cmd"); \
	    else \
	      echo -e $(NOTICE_COLOR)"Found dependency : \"$$cmd\""$(RESTORE_COLOR); \
	    fi; \
	  done; \
	  if [ "$$result" != "passed" ]; then \
	    echo -e $(ERROR_COLOR)"Following dependencies check failed :"$(RESTORE_COLOR); \
	    echo -e $(ERROR_COLOR)"  - `echo $$result | sed s/passed//g`."$(RESTORE_COLOR); \
	    exit -1; \
	  else \
	    echo -e $(NOTICE_COLOR)"Dependencies check succeed."$(RESTORE_COLOR); \
	  fi; \
	fi
	$(shell sed -i 's/\r//' $(MAKE_RULE)/find.library.make.sh)
	chmod +x $(MAKE_RULE)/find.library.make.sh
	chmod +x `find $(ROOT_DIR)/tools -name "*.sh"`
	if [ ! -d $(BIN_DIR) ]; then \
	  mkdir -p $(BIN_DIR); \
	fi;
